# Help Desk Web Application - Report

## Problem Statement
Organizations often struggle to efficiently manage IT or support requests. Manual tracking leads to lost tickets, slow response times, and poor accountability. This application provides a centralized, web-based help desk system to streamline ticket management for both users and administrators.

## Scope of the Application
The application allows users to register, log in, and submit support tickets. Admins can view, edit, and delete all tickets, while regular users can only manage their own. Each user is assigned to a department, and tickets are linked to users and departments. The system enforces role-based access and provides feedback through flash messages and validation.

## Design and Technologies
- **Backend:** Python, Flask, Flask-Login, Flask-SQLAlchemy
- **Frontend:** HTML, Bootstrap, Jinja2 templates
- **Database:** SQLite (relational, lightweight, file-based)
- **Structure:** Modular code with blueprints for views and authentication, models for ORM, and templates for UI
- **Agile Approach:** The project was developed iteratively, with regular testing, refactoring, and user feedback. Features were prioritized and delivered in sprints, ensuring continuous improvement and adaptability.

## Key Features
- User registration and login with role selection (Admin/User)
- Ticket creation, editing, and (admin-only) deletion
- Dashboard with role-based views
- Department assignment for users
- Flash messages and form validation for usability
- Confirmation dialogs for destructive actions

## Dependencies
- Python 3.x
- Flask
- Flask-Login
- Flask-SQLAlchemy
- Werkzeug
- Bootstrap (CDN)

## Design Documents
- See README for ERD and user manual
- See screenshots for UI examples

---
Word count: ~250 (expand with more detail if needed for your assignment)
